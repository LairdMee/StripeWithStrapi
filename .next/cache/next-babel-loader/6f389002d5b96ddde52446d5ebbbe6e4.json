{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useState } from \"react\";\nimport Head from \"next/head\";\nimport AppContext from \"../components/context\";\nimport Home from \"./index\";\nimport Layout from \"../components/layout\";\nimport Cookie from \"js-cookie\";\n\nfunction MyApp(props) {\n  var {\n    cart,\n    addItem,\n    removeItem,\n    user,\n    setUser\n  } = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    cart: cart\n  });\n  const {\n    Component,\n    pageProps\n  } = props;\n\n  setUser = user => {\n    setState({\n      user\n    });\n  };\n\n  addItem = item => {\n    let {\n      items\n    } = state.cart; //check for item already in cart\n    //if not in cart, add item if item is found increase quanity ++\n\n    let foundItem = true;\n\n    if (items.length > 0) {\n      foundItem = items.find(i => i.id === item.id);\n      if (!foundItem) foundItem = false;\n    } else {\n      foundItem = false;\n    }\n\n    console.log(`Found Item value: ${JSON.stringify(foundItem)}`); // if item is not new, add to cart, set quantity to 1\n\n    if (!foundItem) {\n      //set quantity property to 1\n      let temp = JSON.parse(JSON.stringify(item));\n      temp.quantity = 1;\n      var newCart = {\n        items: [...state.cart.items, temp],\n        total: state.cart.total + item.price\n      };\n      setState({\n        cart: newCart\n      });\n      console.log(`Total items: ${JSON.stringify(newCart)}`);\n    } else {\n      // we already have it so just increase quantity ++\n      console.log(`Total so far:  ${state.cart.total}`);\n      newCart = {\n        items: items.map(item => {\n          if (item.id === foundItem.id) {\n            return Object.assign({}, item, {\n              quantity: item.quantity + 1\n            });\n          } else {\n            return item;\n          }\n        }),\n        total: state.cart.total + item.price\n      };\n    }\n\n    setState({\n      cart: newCart\n    }); // problem is this is not updated yet\n\n    console.log(`state reset to cart:${JSON.stringify(state)}`);\n  };\n\n  removeItem = item => {\n    let {\n      items\n    } = state.cart; //check for item already in cart\n\n    const foundItem = items.find(i => i.id === item.id);\n\n    if (foundItem.quantity > 1) {\n      var newCart = {\n        items: items.map(item => {\n          if (item.id === foundItem.id) {\n            return Object.assign({}, item, {\n              quantity: item.quantity - 1\n            });\n          } else {\n            return item;\n          }\n        }),\n        total: state.cart.total - item.price\n      }; //console.log(`NewCart after remove: ${JSON.stringify(newCart)}`)\n    } else {\n      // only 1 in the cart so remove the whole item\n      console.log(`Try remove item ${JSON.stringify(foundItem)}`);\n      const index = items.findIndex(i => i.id === foundItem.id);\n      items.splice(index, 1);\n      var newCart = {\n        items: items,\n        total: state.cart.total - item.price\n      };\n    }\n\n    setState({\n      cart: newCart\n    });\n  };\n\n  return __jsx(AppContext.Provider, {\n    value: {\n      cart: state.cart,\n      addItem: addItem,\n      removeItem: removeItem,\n      isAuthenticated: false,\n      user: null,\n      setUser: () => {}\n    }\n  }, __jsx(Head, null, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\",\n    integrity: \"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\",\n    crossOrigin: \"anonymous\"\n  })), __jsx(Layout, null, __jsx(Component, pageProps)));\n}\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}